<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/2000/REC-xhtml1-20000126/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

	<title>Xdebug: Documentation</title>
	<meta name="ROBOTS" content="ALL" />
	<meta name="MSSmartTagsPreventParsing" content="true" />
	<meta name="DESCRIPTION" content="Xdebug: A powerful debugger for PHP." />
	<meta name="KEYWORDS" content="derick, rethans, opensrc, php, php4, xml, xhtml, xml-rpc, soap, blog, weblog" />
	<meta name="AUTHOR" content="Derick Rethans, as in derick @ php dot net or opensrc @ EFNet" />
	<link type="text/css" rel="stylesheet" href="../core.css" tppabs="http://www.xdebug.org/core.css"/>

<!-- flattr -->
<script type="text/javascript">
/* <![CDATA[ */
    (function() {
        var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
        s.type = 'text/javascript';
        s.async = true;
        s.src = '../../api.flattr.com/js/0.6/load.js-mode=auto'/*tpa=http://api.flattr.com/js/0.6/load.js?mode=auto*/;
        t.parentNode.insertBefore(s, t);
    })();
/* ]]> */</script>
<!-- flattr -->


</head>
<body>
	<table style="width: 100%" border="0" cellpadding="0" cellspacing="0">
		<tr>
			<td style="height: 64px; width: 18%; background: url(/images/topleft.gif);">&nbsp;</td>
			<td class="head" style="height: 64px; background: url(/images/topleft.gif);"><img id="logo" align="right" src="../images/xdebug.gif" tppabs="http://www.xdebug.org/images/xdebug.gif" alt="Xdebug"/></td>
			<td style="height: 64px; width: 18%; background: url(/images/topleft.gif);">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td><span class="serif">
			
<!-- MAIN FEATURE START -->

<span class="sans">XDEBUG EXTENSION FOR PHP | DOCUMENTATION</span><br />

<div id="menu-docs">
<div id="menu">
<span class="sans">
<a href="javascript:if(confirm('http://www.xdebug.org/index.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/index.php'" tppabs="http://www.xdebug.org/index.php">home</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/updates.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/updates.php'" tppabs="http://www.xdebug.org/updates.php">updates</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/download.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/download.php'" tppabs="http://www.xdebug.org/download.php">download</a> |
<a href="index.htm" tppabs="http://www.xdebug.org/docs/">documentation</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/contributing.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/contributing.php'" tppabs="http://www.xdebug.org/contributing.php">contributing</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/license.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/license.php'" tppabs="http://www.xdebug.org/license.php">license</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/support.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/support.php'" tppabs="http://www.xdebug.org/support.php">support</a> |
<a href="javascript:if(confirm('http://bugs.xdebug.org/  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://bugs.xdebug.org/'" tppabs="http://bugs.xdebug.org/">issue tracker</a>
</span>
</div>
<br />

<div id="support" style="float: right; text-align: center; width: 200px; border: 1px solid rgba( 0, 68, 17, 0.6); margin-right: 20px; margin-left: 20px; padding: 5px;">
<p class="buy-support">
If you like Xdebug, please consider giving a<br/>"<a href="javascript:if(confirm('http://www.xdebug.org/donate.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/donate.php'" tppabs="http://www.xdebug.org/donate.php">donation</a>".
<br/>
<br/>
</p>
<p class="buy-support">
Or <a href="javascript:if(confirm('https://flattr.com/about  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='https://flattr.com/about'" tppabs="https://flattr.com/about">Flattr</a> this website:
<a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="javascript:if(confirm('http://xdebug.org/  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://xdebug.org/'" tppabs="http://xdebug.org/"></a>
<noscript><a href="javascript:if(confirm('http://flattr.com/thing/565889/Xdebugs-website  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://flattr.com/thing/565889/Xdebugs-website'" tppabs="http://flattr.com/thing/565889/Xdebugs-website" target="_blank">
<img src="../../api.flattr.com/button/flattr-badge-large.png" tppabs="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
</p>
</div>

禄 Documentation for: <b>Xdebug 2</b><br />
禄 Feature: <b>Basic Features</b><br />
<hr />
</div>
<p class='intro'>Xdebug's basic functions include the display of stack traces on error
		conditions, maximum nesting level protection and time tracking.</p>
<hr class='light'/>

<hr style='clear: both'/>
<h2>Related Settings</h2><div class='settings'>
<a name='default_enable'></a>
<hr class='light'/>
<div class='name'>xdebug.default_enable</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>1</span>
<div class='description'>If this setting is 1, then stacktraces will be shown by default on an
error event. You can disable showing stacktraces from your code with
<a href="all_functions.htm#xdebug_disable" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_disable">xdebug_disable()</a>. As this is one of the basic functions of Xdebug, it is
advisable to leave this setting set to 1.</div>
<a name='force_display_errors'></a>
<hr class='light'/>
<div class='name'>xdebug.force_display_errors</div>
Type: <span class='type'>int</span>, Default value: <span class='default'>0</span>, Introduced in <span class='type'>Xdebug 2.3</span>
<div class='description'><p>If this setting is set to <code>1</code> then errors will
		<b>always</b> be displayed, no matter what the setting of PHP's <a
		href="javascript:if(confirm('http://php.net/manual/en/errorfunc.configuration.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://php.net/manual/en/errorfunc.configuration.php#ini.display-errors'" tppabs="http://php.net/manual/en/errorfunc.configuration.php#ini.display-errors">display_errors</a>
		is.</p></div>
<a name='force_error_reporting'></a>
<hr class='light'/>
<div class='name'>xdebug.force_error_reporting</div>
Type: <span class='type'>int</span>, Default value: <span class='default'>0</span>, Introduced in <span class='type'>Xdebug 2.3</span>
<div class='description'><p>This setting is a bitmask, like <a
		href="javascript:if(confirm('http://php.net/manual/en/errorfunc.configuration.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting'" tppabs="http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting">error_reporting</a>.
		This bitmask will be logically ORed with the bitmask represented by <a
		href="javascript:if(confirm('http://php.net/manual/en/errorfunc.configuration.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting'" tppabs="http://php.net/manual/en/errorfunc.configuration.php#ini.error-reporting">error_reporting</a>
		to dermine which errors should be displayed. This setting can only be
		made in php.ini and allows you to force certain errors from being
		shown no matter what an application does with <a
		href="javascript:if(confirm('http://php.net/manual/en/function.ini-set.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://php.net/manual/en/function.ini-set.php'" tppabs="http://php.net/manual/en/function.ini-set.php">ini_set()</a>.</p></div>
<a name='halt_level'></a>
<hr class='light'/>
<div class='name'>xdebug.halt_level</div>
Type: <span class='type'>int</span>, Default value: <span class='default'>0</span>, Introduced in <span class='type'>Xdebug 2.3</span>
<div class='description'><p>This setting allows you to configure a mask that determines
whether, and which, notices and/or warnings get converted to errors. You can
configure notices and warnings that are generated by PHP, and notices and
warnings that you generate yourself (by means of trigger_error()). For example,
to convert the warning of strlen() (without arguments) to an error, you would
do:</p>
<pre>
ini_set('xdebug.halt_level', E_WARNING);
echo "Hi!\n";
</pre>
<p>Which will then result in the showing of the error message, and the abortion
of the script. <code>echo "Hi!\n";</code> will not be executed.</p>
<p>The setting is a bit mask, so to convert all notices and warnings into
errors for all applications, you can set this in php.ini:</p>
<pre>
xdebug.halt_level=E_WARNING|E_NOTICE|E_USER_WARNING|E_USER_NOTICE
</pre>
<p>The bitmask only supports the four level that are mentioned above.</p></div>
<a name='max_nesting_level'></a>
<hr class='light'/>
<div class='name'>xdebug.max_nesting_level</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>100</span>
<div class='description'>Controls the protection mechanism for infinite recursion protection.
The value of this setting is the maximum level of nested functions that are
allowed before the script will be aborted.</div>
<a name='scream'></a>
<hr class='light'/>
<div class='name'>xdebug.scream</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>0</span>, Introduced in <span class='type'>Xdebug >= 2.1</span>
<div class='description'>If this setting is 1, then Xdebug will disable the @ (shut-up)
		operator so that notices, warnings and errors are no longer hidden.</div>
</div>
<hr />
<h2>Related Functions</h2><div class='functions'>
<a name='xdebug_call_class'></a>
<hr class='light'/>
<div class='name'><span class='type'>string</span> xdebug_call_class()</div>
<div class='short-description'>Returns the calling class</div>
<div class='description'>
<p>
This function returns the name of the class from which the current
 function/method was called from.
 

</p><div class='example'><strong>Example:</strong><br /><br />
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">function&nbsp;</span><span style="color: #0000BB">fix_string</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;</span><span style="color: #DD0000">"Called&nbsp;@&nbsp;"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">xdebug_call_file</span><span style="color: #007700">().<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">":"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">xdebug_call_line</span><span style="color: #007700">().<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #DD0000">"&nbsp;from&nbsp;"</span><span style="color: #007700">.<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">xdebug_call_function</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$ret&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">fix_string</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'Derick'</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">?&gt;<br /></span><br /></span>
</code></div>
<div class='example-returns'><strong>Returns:</strong><br /><br /><pre>
Called @ /home/httpd/html/test/xdebug_caller.php:12 from {main}
</pre></div>
</div>
<a name='xdebug_call_file'></a>
<hr class='light'/>
<div class='name'><span class='type'>string</span> xdebug_call_file()</div>
<div class='short-description'>Returns the calling file</div>
<div class='description'>
<p>
This function returns the filename that contains the function/method that
 called the current function/method.
 

</p><p>
For an example see <a href="all_functions.htm#xdebug_call_class" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_call_class">xdebug_call_class()</a>.

</p></div>
<a name='xdebug_call_function'></a>
<hr class='light'/>
<div class='name'><span class='type'>string</span> xdebug_call_function()</div>
<div class='short-description'>Returns the calling function/method</div>
<div class='description'>
<p>
This function returns the name of the function/method from which the current
 function/method was called from.
 

</p><p>
For an example see <a href="all_functions.htm#xdebug_call_class" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_call_class">xdebug_call_class()</a>.

</p></div>
<a name='xdebug_call_line'></a>
<hr class='light'/>
<div class='name'><span class='type'>int</span> xdebug_call_line()</div>
<div class='short-description'>Returns the calling line</div>
<div class='description'>
<p>
This function returns the line number that contains the function/method that
 called the current function/method.
 

</p><p>
For an example see <a href="all_functions.htm#xdebug_call_class" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_call_class">xdebug_call_class()</a>.

</p></div>
<a name='xdebug_disable'></a>
<hr class='light'/>
<div class='name'><span class='type'>void</span> xdebug_disable()</div>
<div class='short-description'>Disables stack traces</div>
<div class='description'>
<p>
Disable showing stack traces on error conditions.

</p></div>
<a name='xdebug_enable'></a>
<hr class='light'/>
<div class='name'><span class='type'>void</span> xdebug_enable()</div>
<div class='short-description'>Enables stack traces</div>
<div class='description'>
<p>
Enable showing stack traces on error conditions.

</p></div>
<a name='xdebug_get_collected_errors'></a>
<hr class='light'/>
<div class='name'><span class='type'>void</span> xdebug_get_collected_errors( <span class='type'>[int clean]</span> )</div>
<div class='short-description'>Returns all collected error messages</div>
<div class='version'>Introduced in version 2.1</div>
<div class='description'>
<p>
This function returns all errors from the collection buffer that contains all
 errors that were stored there when error collection was started with
 <a href="all_functions.htm#xdebug_start_error_collection" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_start_error_collection">xdebug_start_error_collection()</a>.
 

</p><p>
By default this function will not clear the error collection buffer. If you pass
 <literal>true</literal> as argument to this function then the buffer will be
 cleared as well.
 

</p><p>
This function returns a string containing all collected errors formatted as
 an "Xdebug table".

</p></div>
<a name='xdebug_get_headers'></a>
<hr class='light'/>
<div class='name'><span class='type'>array</span> xdebug_get_headers()</div>
<div class='short-description'>Returns all the headers as set by calls to PHP's header() function</div>
<div class='version'>Introduced in version 2.1</div>
<div class='description'>
<p>
Returns all the headers that are set with PHP's header() function, or any other
 header set internally within PHP (such as through setcookie()), as an array.
 

</p><div class='example'><strong>Example:</strong><br /><br />
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />header</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">"X-Test"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"Testing"&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">setcookie</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">"TestCookie"</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">"test-value"&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">var_dump</span><span style="color: #007700">(&nbsp;</span><span style="color: #0000BB">xdebug_get_headers</span><span style="color: #007700">()&nbsp;);<br /></span><span style="color: #0000BB">?&gt;<br /></span><br /></span>
</code></div>
<div class='example-returns'><strong>Returns:</strong><br /><br /><pre>
array(2) {
  [0]=>
  string(6) "X-Test"
  [1]=>
  string(33) "Set-Cookie: TestCookie=test-value"
}
</pre></div>
</div>
<a name='xdebug_is_enabled'></a>
<hr class='light'/>
<div class='name'><span class='type'>bool</span> xdebug_is_enabled()</div>
<div class='short-description'>Returns whether stack traces are enabled</div>
<div class='description'>
<p>
Return whether stack traces would be shown in case of an error or not.

</p></div>
<a name='xdebug_memory_usage'></a>
<hr class='light'/>
<div class='name'><span class='type'>int</span> xdebug_memory_usage()</div>
<div class='short-description'>Returns the current memory usage</div>
<div class='description'>
<p>
Returns the current amount of memory the script uses. Before PHP 5.2.1, this
 only works if PHP is compiled with --enable-memory-limit. From PHP 5.2.1 and
 later this function is always available.

</p></div>
<a name='xdebug_peak_memory_usage'></a>
<hr class='light'/>
<div class='name'><span class='type'>int</span> xdebug_peak_memory_usage()</div>
<div class='short-description'>Returns the peak memory usage</div>
<div class='description'>
<p>
Returns the maximum amount of memory the script used until now.  Before PHP
 5.2.1, this only works if PHP is compiled with --enable-memory-limit. From PHP
 5.2.1 and later this function is always available.

</p></div>
<a name='xdebug_start_error_collection'></a>
<hr class='light'/>
<div class='name'><span class='type'>void</span> xdebug_start_error_collection()</div>
<div class='short-description'>Starts recording all notices, warnings and errors and prevents their display</div>
<div class='version'>Introduced in version 2.1</div>
<div class='description'>
<p>
When this function is executed, Xdebug will cause PHP not to display any
 notices, warnings or errors. Instead, they are formatted according to Xdebug's
 normal error formatting rules (ie, the error table with the red exclamation
 mark) and then stored in a buffer. This will continue until you call
 <a href="all_functions.htm#xdebug_stop_error_collection" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_stop_error_collection">xdebug_stop_error_collection()</a>.
 

</p><p>
This buffer's contents can be retrieved by calling
 <a href="all_functions.htm#xdebug_get_collected_errors" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_get_collected_errors">xdebug_get_collected_errors()</a> and then subsequently displayed. This is
 really useful if you want to prevent Xdebug's powerful error reporting features
 from destroying your layout.
 

</p></div>
<a name='xdebug_stop_error_collection'></a>
<hr class='light'/>
<div class='name'><span class='type'>void</span> xdebug_stop_error_collection()</div>
<div class='short-description'>Stops recording of all notices, warnings and errors as started by <a href="all_functions.htm#xdebug_start_error_collection" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_start_error_collection">xdebug_start_error_collection()</a></div>
<div class='version'>Introduced in version 2.1</div>
<div class='description'>
<p>
When this function is executed, error collection as started by
 <a href="all_functions.htm#xdebug_start_error_collection" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_start_error_collection">xdebug_start_error_collection()</a> is aborted.  The errors stored in the
 collection buffer are not deleted and still available to be fetched through
 <a href="all_functions.htm#xdebug_get_collected_errors" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_get_collected_errors">xdebug_get_collected_errors()</a>.

</p></div>
<a name='xdebug_time_index'></a>
<hr class='light'/>
<div class='name'><span class='type'>float</span> xdebug_time_index()</div>
<div class='short-description'>Returns the current time index</div>
<div class='description'>
<p>
Returns the current time index since the starting of the script in
 seconds.
 

</p><div class='example'><strong>Example:</strong><br /><br />
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /></span><span style="color: #007700">echo&nbsp;</span><span style="color: #0000BB">xdebug_time_index</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br />for&nbsp;(</span><span style="color: #0000BB">$i&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">0</span><span style="color: #007700">;&nbsp;</span><span style="color: #0000BB">$i&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #0000BB">250000</span><span style="color: #007700">;&nbsp;</span><span style="color: #0000BB">$i</span><span style="color: #007700">++)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #FF8000">//&nbsp;do&nbsp;nothing<br /></span><span style="color: #007700">}<br />echo&nbsp;</span><span style="color: #0000BB">xdebug_time_index</span><span style="color: #007700">(),&nbsp;</span><span style="color: #DD0000">"\n"</span><span style="color: #007700">;<br /></span><span style="color: #0000BB">?&gt;<br /></span><br /></span>
</code></div>
<div class='example-returns'><strong>Returns:</strong><br /><br /><pre>
0.00038003921508789
0.76580691337585
</pre></div>
</div>
</div>
<hr />
</div>
<!-- MAIN FEATURE END -->
			</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="4">
<div class="copy">
This site and all of its contents are
Copyright &copy; 2002-2014 by Derick Rethans.<br />
All rights reserved.
</div>
			</td>
		</tr>
	</table>

</body>
</html>
