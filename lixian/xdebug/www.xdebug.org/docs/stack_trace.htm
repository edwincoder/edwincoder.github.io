<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/2000/REC-xhtml1-20000126/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta http-equiv=Content-Type content='text/html; charset=UTF-8'>

	<title>Xdebug: Documentation</title>
	<meta name="ROBOTS" content="ALL" />
	<meta name="MSSmartTagsPreventParsing" content="true" />
	<meta name="DESCRIPTION" content="Xdebug: A powerful debugger for PHP." />
	<meta name="KEYWORDS" content="derick, rethans, opensrc, php, php4, xml, xhtml, xml-rpc, soap, blog, weblog" />
	<meta name="AUTHOR" content="Derick Rethans, as in derick @ php dot net or opensrc @ EFNet" />
	<link type="text/css" rel="stylesheet" href="../core.css" tppabs="http://www.xdebug.org/core.css"/>

<!-- flattr -->
<script type="text/javascript">
/* <![CDATA[ */
    (function() {
        var s = document.createElement('script'), t = document.getElementsByTagName('script')[0];
        s.type = 'text/javascript';
        s.async = true;
        s.src = '../../api.flattr.com/js/0.6/load.js-mode=auto'/*tpa=http://api.flattr.com/js/0.6/load.js?mode=auto*/;
        t.parentNode.insertBefore(s, t);
    })();
/* ]]> */</script>
<!-- flattr -->

<link rel="stylesheet" type="text/css" href="../yui/build/tabview/assets/tabview.css" tppabs="http://www.xdebug.org/yui/build/tabview/assets/tabview.css"/>
<link rel="stylesheet" type="text/css" href="../yui/build/tabview/assets/border_tabs.css" tppabs="http://www.xdebug.org/yui/build/tabview/assets/border_tabs.css"/>
<script type="text/javascript" src="../yui/build/yahoo/yahoo.js" tppabs="http://www.xdebug.org/yui/build/yahoo/yahoo.js"></script>
<script type="text/javascript" src="../yui/build/event/event.js" tppabs="http://www.xdebug.org/yui/build/event/event.js"></script>
<script type="text/javascript" src="../yui/build/dom/dom.js" tppabs="http://www.xdebug.org/yui/build/dom/dom.js"></script>
<script type="text/javascript" src="../yui/build/element/element-beta.js" tppabs="http://www.xdebug.org/yui/build/element/element-beta.js"></script>

<script type="text/javascript" src="../yui/build/tabview/tabview.js" tppabs="http://www.xdebug.org/yui/build/tabview/tabview.js"></script>

<style type="text/css">
#collectparams .yui-content { padding:1em; } /* pad content container */
#othersettings .yui-content { padding:1em; } /* pad content container */
</style>

<script type="text/javascript">
YAHOO.example.init = function() {
    var tabViewcollectparams = new YAHOO.widget.TabView('collectparams');
    var tabViewothersettings = new YAHOO.widget.TabView('othersettings');
};

YAHOO.example.init();
</script>

</head>
<body>
	<table style="width: 100%" border="0" cellpadding="0" cellspacing="0">
		<tr>
			<td style="height: 64px; width: 18%; background: url(/images/topleft.gif);">&nbsp;</td>
			<td class="head" style="height: 64px; background: url(/images/topleft.gif);"><img id="logo" align="right" src="../images/xdebug.gif" tppabs="http://www.xdebug.org/images/xdebug.gif" alt="Xdebug"/></td>
			<td style="height: 64px; width: 18%; background: url(/images/topleft.gif);">&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td><span class="serif">
			
<!-- MAIN FEATURE START -->

<span class="sans">XDEBUG EXTENSION FOR PHP | DOCUMENTATION</span><br />

<div id="menu-docs">
<div id="menu">
<span class="sans">
<a href="javascript:if(confirm('http://www.xdebug.org/index.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/index.php'" tppabs="http://www.xdebug.org/index.php">home</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/updates.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/updates.php'" tppabs="http://www.xdebug.org/updates.php">updates</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/download.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/download.php'" tppabs="http://www.xdebug.org/download.php">download</a> |
<a href="index.htm" tppabs="http://www.xdebug.org/docs/">documentation</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/contributing.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/contributing.php'" tppabs="http://www.xdebug.org/contributing.php">contributing</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/license.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/license.php'" tppabs="http://www.xdebug.org/license.php">license</a> |
<a href="javascript:if(confirm('http://www.xdebug.org/support.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/support.php'" tppabs="http://www.xdebug.org/support.php">support</a> |
<a href="javascript:if(confirm('http://bugs.xdebug.org/  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://bugs.xdebug.org/'" tppabs="http://bugs.xdebug.org/">issue tracker</a>
</span>
</div>
<br />

<div id="support" style="float: right; text-align: center; width: 200px; border: 1px solid rgba( 0, 68, 17, 0.6); margin-right: 20px; margin-left: 20px; padding: 5px;">
<p class="buy-support">
If you like Xdebug, please consider giving a<br/>"<a href="javascript:if(confirm('http://www.xdebug.org/donate.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.xdebug.org/donate.php'" tppabs="http://www.xdebug.org/donate.php">donation</a>".
<br/>
<br/>
</p>
<p class="buy-support">
Or <a href="javascript:if(confirm('https://flattr.com/about  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='https://flattr.com/about'" tppabs="https://flattr.com/about">Flattr</a> this website:
<a class="FlattrButton" style="display:none;" rev="flattr;button:compact;" href="javascript:if(confirm('http://xdebug.org/  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://xdebug.org/'" tppabs="http://xdebug.org/"></a>
<noscript><a href="javascript:if(confirm('http://flattr.com/thing/565889/Xdebugs-website  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://flattr.com/thing/565889/Xdebugs-website'" tppabs="http://flattr.com/thing/565889/Xdebugs-website" target="_blank">
<img src="../../api.flattr.com/button/flattr-badge-large.png" tppabs="http://api.flattr.com/button/flattr-badge-large.png" alt="Flattr this" title="Flattr this" border="0" /></a></noscript>
</p>
</div>

禄 Documentation for: <b>Xdebug 2</b><br />
禄 Feature: <b>Stack Traces</b><br />
<hr />
</div>
<p class='intro'>When Xdebug is activated it will show a stack trace whenever PHP
		decides to show a notice, warning, error etc. The information that
		stack traces display, and the way how they are presented, can be
		configured to suit your needs.</p>
<hr class='light'/>

<p>
The stack traces that Xdebug shows on error situations (if <a
href="javascript:if(confirm('http://www.php.net/manual/en/ref.errorfunc.php  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.php.net/manual/en/ref.errorfunc.php#ini.display-errors'" tppabs="http://www.php.net/manual/en/ref.errorfunc.php#ini.display-errors">display_errors</a>
is set to On in php.ini) are quite conservative in the amount of
information that they show. This is because large amounts of information can
slow down both the execution of the scripts and the rendering of the stack
traces themselves in the browser. However, it is possible to make the stack
traces show more detailed information with different settings.
</p>
<h2>Variables in Stack Traces</h2>
<p>
By default Xdebug will now show variable information in the stack traces that
it produces. Variable information can take quite a bit of resources, both while
collecting or displaying. However, in many cases it is useful that variable
information is displayed, and that is why Xdebug has the setting
<a href="all_settings.htm#collect_params" tppabs="http://www.xdebug.org/docs/all_settings#collect_params">xdebug.collect_params</a>. The script below, in combination with what the output
will look like with different values of this setting is shown in the example
below.
</p>
<h3>The script</h3>
<div class="example">
<p>
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #0000BB">foo</span><span style="color: #007700">(&nbsp;</span><span style="color: #0000BB">$a&nbsp;</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(</span><span style="color: #0000BB">$i&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">1</span><span style="color: #007700">;&nbsp;</span><span style="color: #0000BB">$i&nbsp;</span><span style="color: #007700">&lt;&nbsp;</span><span style="color: #0000BB">$a</span><span style="color: #007700">[</span><span style="color: #DD0000">'foo'</span><span style="color: #007700">];&nbsp;</span><span style="color: #0000BB">$i</span><span style="color: #007700">++)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(</span><span style="color: #0000BB">$i&nbsp;</span><span style="color: #007700">==&nbsp;</span><span style="color: #0000BB">500000</span><span style="color: #007700">)&nbsp;</span><span style="color: #0000BB">xdebug_break</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br /></span><span style="color: #0000BB">set_time_limit</span><span style="color: #007700">(</span><span style="color: #0000BB">1</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">$c&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #0000BB">stdClass</span><span style="color: #007700">;<br /></span><span style="color: #0000BB">$c</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">bar&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">100</span><span style="color: #007700">;<br /></span><span style="color: #0000BB">$a&nbsp;</span><span style="color: #007700">=&nbsp;array(<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">42&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">false</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'foo'&nbsp;</span><span style="color: #007700">=&gt;&nbsp;</span><span style="color: #0000BB">912124</span><span style="color: #007700">,<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$c</span><span style="color: #007700">,&nbsp;new&nbsp;</span><span style="color: #0000BB">stdClass</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">fopen</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'/etc/passwd'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'r'&nbsp;</span><span style="color: #007700">)<br />);<br /></span><span style="color: #0000BB">foo</span><span style="color: #007700">(&nbsp;</span><span style="color: #0000BB">$a&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;<br /></span>
	</span>
	</code>
</p>
</div>

<h3>The results</h3>
<p>
Different values for the <a href="all_settings.htm#collect_params" tppabs="http://www.xdebug.org/docs/all_settings#collect_params">xdebug.collect_params</a> setting give different output,
which you can see below:
</p>

    <div id="collectparams" class="yui-navset">
        <ul class="yui-nav">
            <li class="selected"><a href="#default"><em>default</em></a></li>
            <li><a href="#collect-params-1"><em>1</em></a></li>
            <li><a href="#collect-params-2"><em>2</em></a></li>
            <li><a href="#collect-params-3"><em>3</em></a></li>
            <li><a href="#collect-params-4"><em>4</em></a></li>
        </ul>
        <div class="yui-content">
            <div id="default">
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>34</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58564</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>

<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62764</td><td bgcolor='#eeeeec'>foo(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
</table></font>
            </div>
            <div id="collect-params-1">
<pre>
ini_set('xdebug.collect_params', '1');
</pre>
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>31</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58132</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62380</td><td bgcolor='#eeeeec'>foo( <span><font color='#ce5c00'>array(5)</font></span> )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
</table></font>
            </div>
            <div id="collect-params-2">
<pre>
ini_set('xdebug.collect_params', '2');
</pre>
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>31</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58564</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62812</td><td bgcolor='#eeeeec'>foo( <span title='array (42 =&gt; FALSE, &apos;foo&apos; =&gt; 912124, 43 =&gt; class stdClass { public $bar = 100 }, 44 =&gt; class stdClass {  }, 45 =&gt; resource(2) of type (stream))'><font color='#ce5c00'>array(5)</font></span> )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
</table></font>
            </div>
            <div id="collect-params-3">
<pre>
ini_set('xdebug.collect_params', '3');
</pre>
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>31</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58564</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62812</td><td bgcolor='#eeeeec'>foo( <span>array (42 =&gt; FALSE, &apos;foo&apos; =&gt; 912124, 43 =&gt; class stdClass { public $bar = 100 }, 44 =&gt; class stdClass {  }, 45 =&gt; resource(2) of type (stream))</span> )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
</table></font>
            </div>
            <div id="collect-params-4">
<pre>
ini_set('xdebug.collect_params', '4');
</pre>
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>31</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58132</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62380</td><td bgcolor='#eeeeec'>foo( <span>$a = </span><span>array (42 =&gt; FALSE, &apos;foo&apos; =&gt; 912124, 43 =&gt; class stdClass { public $bar = 100 }, 44 =&gt; class stdClass {  }, 45 =&gt; resource(2) of type (stream))</span> )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
</table></font>
            </div>
        </div>
    </div>
<h2>Additional Information</h2>
<p>
On top of showing the values of variables that were passed to each function
Xdebug can also optionally show information about selected superglobals by using
the <a href="all_settings.htm#dump_globals" tppabs="http://www.xdebug.org/docs/all_settings#dump_globals">xdebug.dump_globals</a> and <a href="all_settings.htm#dump.*" tppabs="http://www.xdebug.org/docs/all_settings#dump.*">xdebug.dump.*</a> settings. The settings <a href="all_settings.htm#dump_once" tppabs="http://www.xdebug.org/docs/all_settings#dump_once">xdebug.dump_once</a>
and <a href="all_settings.htm#dump_undefined" tppabs="http://www.xdebug.org/docs/all_settings#dump_undefined">xdebug.dump_undefined</a> slightly modify when and which information is shown
from the available superglobals. With the <a href="all_settings.htm#show_local_vars" tppabs="http://www.xdebug.org/docs/all_settings#show_local_vars">xdebug.show_local_vars</a> setting you can
instruct Xdebug to show all variables available in the top-most stack level for
a user defined function as well. The examples below show this (the script is
used from the example above).
</p>
	<div id="othersettings" class="yui-navset">
        <ul class="yui-nav">
            <li class="selected"><a href="#add-default"><em>default</em></a></li>
            <li><a href="#add-superglobals"><em>dump_superglobals=1</em></a></li>
            <li><a href="#add-local-vars"><em>show_local_vars=1</em></a></li>
        </ul>
        <div class="yui-content">
            <div id="add-default">
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>34</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58564</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>

<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62764</td><td bgcolor='#eeeeec'>foo(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
</table></font>
            </div>
            <div id="add-superglobals">
<pre>
ini_set('xdebug.collect_vars', 'on');
ini_set('xdebug.collect_params', '4');
ini_set('xdebug.dump_globals', 'on');
ini_set('xdebug.dump.SERVER', 'REQUEST_URI');
</pre>
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>33</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58132</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0004</td><td bgcolor='#eeeeec' align='right'>62436</td><td bgcolor='#eeeeec'>foo(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
<tr><th colspan='5' align='left' bgcolor='#e9b96e'>Dump <i>$_SERVER</i></th></tr>
<tr><td colspan='2' align='right' bgcolor='#eeeeec' valign='top'><pre>$_SERVER['REQUEST_URI']&nbsp;=</pre></td><td colspan='3' bgcolor='#eeeeec'><pre><small>string</small> <font color='#cc0000'>'/test/xdebug/docs/stack.php?level=5'</font> <i>(length=35)</i>
</pre></td></tr>
</table></font>
            </div>
            <div id="add-local-vars">
<pre>
ini_set('xdebug.collect_vars', 'on');
ini_set('xdebug.collect_params', '4');
ini_set('xdebug.dump_globals', 'on');
ini_set('xdebug.dump.SERVER', 'REQUEST_URI');
ini_set('xdebug.show_local_vars', 'on');
</pre>
<br />
<font size='1'><table border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Fatal error: Maximum execution time of 1 second exceeded in /home/httpd/html/test/xdebug/docs/stack.php on line <i>31</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0001</td><td bgcolor='#eeeeec' align='right'>58132</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>0</td></tr>

<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0005</td><td bgcolor='#eeeeec' align='right'>62588</td><td bgcolor='#eeeeec'>foo(  )</td><td title='/home/httpd/html/test/xdebug/docs/stack.php' bgcolor='#eeeeec'>../stack.php<b>:</b>47</td></tr>
<tr><th colspan='5' align='left' bgcolor='#e9b96e'>Dump <i>$_SERVER</i></th></tr>
<tr><td colspan='2' align='right' bgcolor='#eeeeec' valign='top'><pre>$_SERVER['REQUEST_URI']&nbsp;=</pre></td><td colspan='3' bgcolor='#eeeeec'><pre><small>string</small> <font color='#cc0000'>'/test/xdebug/docs/stack.php?level=6'</font> <i>(length=35)</i>

</pre></td></tr>
<tr><th align='left' colspan='5' bgcolor='#e9b96e'>Variables in local scope (#2)</th></tr>
<tr><td colspan='2' align='right' bgcolor='#eeeeec' valign='top'><pre>$a&nbsp;=</pre></td><td colspan='4' bgcolor='#eeeeec'><pre>
<b>array</b>
  42 <font color='#888a85'>=&gt;</font> <small>boolean</small> <font color='#75507b'>false</font>
  'foo' <font color='#888a85'>=&gt;</font> <small>int</small> <font color='#4e9a06'>912124</font>
  43 <font color='#888a85'>=&gt;</font> 
    <b>object</b>(<i>stdClass</i>)[<i>1</i>]
      <i>public</i> 'bar' <font color='#888a85'>=&gt;</font> <small>int</small> <font color='#4e9a06'>100</font>
  44 <font color='#888a85'>=&gt;</font> 
    <b>object</b>(<i>stdClass</i>)[<i>2</i>]
  45 <font color='#888a85'>=&gt;</font> <b>resource</b>(<i>2</i><font color='#2e3436'>,</font> <i>stream</i>)
</pre></td></tr>
<tr><td colspan='2' align='right' bgcolor='#eeeeec' valign='top'><pre>$i&nbsp;=</pre></td><td colspan='4' bgcolor='#eeeeec'><pre><small>int</small> <font color='#4e9a06'>275447</font>
</pre></td></tr>
</table></font>
            </div>
        </div>
    </div>
<hr style='clear: both'/>
<h2>Related Settings</h2><div class='settings'>
<a name='cli_color'></a>
<hr class='light'/>
<div class='name'>xdebug.cli_color</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>0</span>, Introduced in <span class='type'>Xdebug > 2.2</span>
<div class='description'><p>If this setting is 1, Xdebug will color var_dumps and stack traces
		output when in CLI mode and when the output is a tty. On Windows, the
		<a href="javascript:if(confirm('http://adoxa.110mb.com/ansicon/  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://adoxa.110mb.com/ansicon/'" tppabs="http://adoxa.110mb.com/ansicon/">ANSICON</a> tool needs to be
		installed.</p>
		<p>If the setting is 2, then Xdebug will always color var_dumps and stack
		trace, no matter whether it's connected to a tty or whether ANSICON is
		installed. In this case, you might end up seeing escape codes.</p>
		<p>See <a href="javascript:if(confirm('http://drck.me/clicolor-9cr  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://drck.me/clicolor-9cr'" tppabs="http://drck.me/clicolor-9cr">this article</a> for some
		more information.</p></div>
<a name='collect_includes'></a>
<hr class='light'/>
<div class='name'>xdebug.collect_includes</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>1</span>
<div class='description'>This setting, defaulting to 1, controls whether Xdebug should write the
filename used in include(), include_once(), require() or require_once() to the
trace files.</div>
<a name='collect_params'></a>
<hr class='light'/>
<div class='name'>xdebug.collect_params</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>0</span>
<div class='description'><p>This setting, defaulting to 0, controls whether Xdebug should collect
the parameters passed to functions when a function call is recorded in either
the function trace or the stack trace.</p>
<p>The setting defaults to 0 because for very large
scripts it may use huge amounts of memory and therefore make it impossible for
the huge script to run. You can most safely turn this setting on, but you can
expect some problems in scripts with a lot of function calls and/or huge data
structures as parameters. Xdebug 2 will not have this problem with increased
memory usage, as it will never store this information in memory. Instead it
will only be written to disk. This means that you need to have a look at the
disk usage though.</p>
<p>This setting can have four different values. For each of the values a
different amount of information is shown. Below you will see what information
each of the values provides. See also the introduction of the feature
<a href="stack_trace.htm" tppabs="http://www.xdebug.org/docs/stack_trace">Stack Traces</a> for a few screenshots.</p>
<table class='table'>
<tr><th>Value</th><th>Argument Information Shown</th></tr>
<tr><td class='ctr'>0</td><td>None.</td></tr>
<tr><td class='ctr'>1</td><td>Type and number of elements (f.e. string(6), array(8)).</td></tr>
<tr><td class='ctr'>2</td><td><p>Type and number of elements, with a tool tip for the full information <sup>1</sup>.</p></td></tr>
<tr><td class='ctr'>3</td><td>Full variable contents (with the limits respected as set by <a href="all_settings.htm#var_display_max_children" tppabs="http://www.xdebug.org/docs/all_settings#var_display_max_children">xdebug.var_display_max_children</a>, <a href="all_settings.htm#var_display_max_data" tppabs="http://www.xdebug.org/docs/all_settings#var_display_max_data">xdebug.var_display_max_data</a> and <a href="all_settings.htm#var_display_max_depth" tppabs="http://www.xdebug.org/docs/all_settings#var_display_max_depth">xdebug.var_display_max_depth</a>.</td></tr>
<tr><td class='ctr'>4</td><td>Full variable contents and variable name.</td></tr>
<tr><td class='ctr'>5</td><td>PHP serialized variable contents, without the name. <i>(New in Xdebug 2.3)</i></td></tr>
</table>
<p><sup>1</sup></a> in the CLI version of PHP it will not have the tool tip, nor in output files.</p>
</div>
<a name='collect_vars'></a>
<hr class='light'/>
<div class='name'>xdebug.collect_vars</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>0</span>
<div class='description'>This setting tells Xdebug to gather information about which variables
are used in a certain scope. This analysis can be quite slow as Xdebug has
to reverse engineer PHP's opcode arrays. This setting will not record which
values the different variables have, for that use <a href="all_settings.htm#collect_params" tppabs="http://www.xdebug.org/docs/all_settings#collect_params">xdebug.collect_params</a>.
This setting needs to be enabled only if you wish to use
<a href="all_functions.htm#xdebug_get_declared_vars" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_get_declared_vars">xdebug_get_declared_vars()</a>.</div>
<a name='dump.*'></a>
<hr class='light'/>
<div class='name'>xdebug.dump.*</div>
Type: <span class='type'>string</span>, Default value: <span class='default'>Empty</span>
<div class='description'><p>* can be any of COOKIE, FILES, GET, POST, REQUEST, SERVER, SESSION.
These seven settings control which data from the superglobals is shown when an
error situation occurs.</p>
<p>Each of those php.ini setting can consist of a comma seperated list of
variables from this superglobal to dump, or <code>*</code> for all of them.
Make sure you do not add spaces in this setting.</p>
<p>In order to dump the REMOTE_ADDR and the REQUEST_METHOD when an error
occurs, and all GET parameters, add these settings:</p>
<pre>
xdebug.dump.SERVER = REMOTE_ADDR,REQUEST_METHOD
xdebug.dump.GET = *
</pre>
</div>
<a name='dump_globals'></a>
<hr class='light'/>
<div class='name'>xdebug.dump_globals</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>1</span>
<div class='description'>Controls whether the values of the superglobals as defined by the <a href="all_settings.htm#dump.*" tppabs="http://www.xdebug.org/docs/all_settings#dump.*">xdebug.dump.*</a> settings should be shown or not.</div>
<a name='dump_once'></a>
<hr class='light'/>
<div class='name'>xdebug.dump_once</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>1</span>
<div class='description'>Controls whether the values of the superglobals should be dumped on all
error situations (set to 0) or only on the first (set to 1).</div>
<a name='dump_undefined'></a>
<hr class='light'/>
<div class='name'>xdebug.dump_undefined</div>
Type: <span class='type'>boolean</span>, Default value: <span class='default'>0</span>
<div class='description'>If you want to dump undefined values from the superglobals you should set
this setting to 1, otherwise leave it set to 0.</div>
<a name='file_link_format'></a>
<hr class='light'/>
<div class='name'>xdebug.file_link_format</div>
Type: <span class='type'>string</span>, Default value: <span class='default'></span>, Introduced in <span class='type'>Xdebug > 2.1</span>
<div class='description'><p>This setting determines the format of the links that are made in
the display of stack traces where file names are used. This allows IDEs to set
up a link-protocol that makes it possible to go directly to a line and file by
clicking on the filenames that Xdebug shows in stack traces. An example format might look like:
</p>
<pre>
myide://%f@%l
</pre>
<p>
The possible format specifiers are:
</p>
<table class="table">
<tr><th>Specifier</th><th>Meaning</th></tr>
<tr><td class="ctr">%f</td><td>the filename</td></tr>
<tr><td class="ctr">%l</td><td>the line number</td></tr>
</table>
<p>
For various IDEs/OSses there are some instructions listed on how to make this work:
</p>
<h4>Firefox on Linux</h4>
<ul>
<li>Open <a href="about:config">about:config</a></li>
<li>Add a new boolean setting "network.protocol-handler.expose.xdebug" and set it to "false"</li>
<li>Add the following into a shell script <code>~/bin/ff-xdebug.sh</code>:
<pre>
#! /bin/sh

f=`echo $1 | cut -d @ -f 1 | sed 's/xdebug:\/\///'`
l=`echo $1 | cut -d @ -f 2`
</pre>
Add to that one of (depending whether you have komodo, gvim or netbeans):
<ul>
	<li><code>komodo $f -l $l</code></li>
	<li><code>gvim --remote-tab +$l $f</code></li>
	<li><code>netbeans "$f:$l"</code></li>
</ul>
</pre>
</li>
<li>Make the script executable with <code>chmod +x ~/bin/ff-xdebug.sh</code></li>
<li>Set the <a href="all_settings.htm#file_link_format" tppabs="http://www.xdebug.org/docs/all_settings#file_link_format">xdebug.file_link_format</a> setting to <code>xdebug://%f@%l</code></li>
</ul>

<h4>Windows and netbeans</h4>
<ul>
<li>Create the file <code>netbeans.bat</code> and save it in your path (<code>C:\Windows</code> will work):
<pre>
@echo off
setlocal enableextensions enabledelayedexpansion
set NETBEANS=%1
set FILE=%~2
%NETBEANS% --nosplash --console suppress --open "%FILE:~19%"
nircmd win activate process netbeans.exe
</pre>
<p>
	<b>Note:</b> Remove the last line if you don't have <code>nircmd</code>.
</p>
</li>
<li>Save the following code as <code>netbeans_protocol.reg</code>:
<pre>
Windows Registry Editor Version 5.00

[HKEY_CLASSES_ROOT\netbeans]
"URL Protocol"=""
@="URL:Netbeans Protocol"

[HKEY_CLASSES_ROOT\netbeans\DefaultIcon]
@="\"C:\\Program Files\\NetBeans 7.1.1\\bin\\netbeans.exe,1\""

[HKEY_CLASSES_ROOT\netbeans\shell]

[HKEY_CLASSES_ROOT\netbeans\shell\open]

[HKEY_CLASSES_ROOT\netbeans\shell\open\command]
@="\"C:\\Windows\\netbeans.bat\" \"C:\\Program Files\\NetBeans 7.1.1\\bin\\netbeans.exe\" \"%1\""
</pre>
<p>
	<b>Note:</b> Make sure to change the path to Netbeans (twice), as well as
	the <code>netbeans.bat</code> batch file if you saved it somewhere else
	than <code>C:\Windows\</code>.
</p>
</li>
<li>Double click on the <code>netbeans_protocol.reg</code> file to import it
into the registry.</li>
<li>Set the <a href="all_settings.htm#file_link_format" tppabs="http://www.xdebug.org/docs/all_settings#file_link_format">xdebug.file_link_format</a> setting to <code>xdebug.file_link_format =
"netbeans://open/?f=%f:%l"</code></li>
</ul>
</div>
<a name='manual_url'></a>
<hr class='light'/>
<div class='name'>xdebug.manual_url</div>
Type: <span class='type'>string</span>, Default value: <span class='default'>http://www.php.net</span>, Introduced in <span class='type'>Xdebug < 2.2.1</span>
<div class='description'>This is the base url for the links from the function traces and error
message to the manual pages of the function from the message. It is advisable
to set this setting to use the closest mirror.</div>
<a name='show_exception_trace'></a>
<hr class='light'/>
<div class='name'>xdebug.show_exception_trace</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>0</span>
<div class='description'>When this setting is set to 1, Xdebug will show a stack trace whenever
an exception is raised - even if this exception is actually caught.</div>
<a name='show_local_vars'></a>
<hr class='light'/>
<div class='name'>xdebug.show_local_vars</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>0</span>
<div class='description'>When this setting is set to something != 0 Xdebug's generated stack dumps
in error situations will also show all variables in the top-most scope. Beware
that this might generate a lot of information, and is therefore turned off by
default.</div>
<a name='show_mem_delta'></a>
<hr class='light'/>
<div class='name'>xdebug.show_mem_delta</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>0</span>
<div class='description'>When this setting is set to something != 0 Xdebug's human-readable
generated trace files will show the difference in memory usage between function
calls. If Xdebug is configured to generate computer-readable trace files then
they will always show this information.</div>
<a name='var_display_max_children'></a>
<hr class='light'/>
<div class='name'>xdebug.var_display_max_children</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>128</span>
<div class='description'><p>Controls the amount of array children and object's properties are shown
when variables are displayed with either <a href="all_functions.htm#xdebug_var_dump" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_var_dump">xdebug_var_dump()</a>,
<a href="all_settings.htm#show_local_vars" tppabs="http://www.xdebug.org/docs/all_settings#show_local_vars">xdebug.show_local_vars</a> or through <a href="execution_trace.htm" tppabs="http://www.xdebug.org/docs/execution_trace">Function Traces</a>.</p>
<p>To disable any limitation, use <i>-1</i> as value.</p>
<p>This setting does not have any influence on the number of children that is
send to the client through the <a href="remote.htm" tppabs="http://www.xdebug.org/docs/remote">Remote Debugging</a> feature.</p></div>
<a name='var_display_max_data'></a>
<hr class='light'/>
<div class='name'>xdebug.var_display_max_data</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>512</span>
<div class='description'><p>Controls the maximum string length that is shown
when variables are displayed with either <a href="all_functions.htm#xdebug_var_dump" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_var_dump">xdebug_var_dump()</a>,
<a href="all_settings.htm#show_local_vars" tppabs="http://www.xdebug.org/docs/all_settings#show_local_vars">xdebug.show_local_vars</a> or through <a href="execution_trace.htm" tppabs="http://www.xdebug.org/docs/execution_trace">Function Traces</a>.
<p>To disable any limitation, use <i>-1</i> as value.</p>
<p>This setting does not have any influence on the number of children that is
send to the client through the <a href="remote.htm" tppabs="http://www.xdebug.org/docs/remote">Remote Debugging</a> feature.</p></div>
<a name='var_display_max_depth'></a>
<hr class='light'/>
<div class='name'>xdebug.var_display_max_depth</div>
Type: <span class='type'>integer</span>, Default value: <span class='default'>3</span>
<div class='description'><p>Controls how many nested levels of array elements and object properties are
when variables are displayed with either <a href="all_functions.htm#xdebug_var_dump" tppabs="http://www.xdebug.org/docs/all_functions#xdebug_var_dump">xdebug_var_dump()</a>,
<a href="all_settings.htm#show_local_vars" tppabs="http://www.xdebug.org/docs/all_settings#show_local_vars">xdebug.show_local_vars</a> or through <a href="execution_trace.htm" tppabs="http://www.xdebug.org/docs/execution_trace">Function Traces</a>.</p>
<p>The maximum value you can select is 1023. You can also use <i>-1</i> as
value to select this maximum number.</p>
<p>This setting does not have any influence on the number of children that is
send to the client through the <a href="remote.htm" tppabs="http://www.xdebug.org/docs/remote">Remote Debugging</a> feature.</p></div>
</div>
<hr />
<h2>Related Functions</h2><div class='functions'>
<a name='xdebug_get_declared_vars'></a>
<hr class='light'/>
<div class='name'><span class='type'>array</span> xdebug_get_declared_vars()</div>
<div class='short-description'>Returns declared variables</div>
<div class='description'>
<p>
Returns an array where each element is a variable name which is defined in the
 current scope. The setting <a href="all_settings.htm#collect_vars" tppabs="http://www.xdebug.org/docs/all_settings#collect_vars">xdebug.collect_vars</a> needs to be enabled.
 

</p><div class='example'><strong>Example:</strong><br /><br />
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">class&nbsp;</span><span style="color: #0000BB">strings&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;function&nbsp;</span><span style="color: #0000BB">fix_strings</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$b</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style="color: #0000BB">$b&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #0000BB">$item</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">var_dump</span><span style="color: #007700">(</span><span style="color: #0000BB">xdebug_get_declared_vars</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">strings</span><span style="color: #007700">::</span><span style="color: #0000BB">fix_strings</span><span style="color: #007700">(array(</span><span style="color: #0000BB">1</span><span style="color: #007700">,</span><span style="color: #0000BB">2</span><span style="color: #007700">,</span><span style="color: #0000BB">3</span><span style="color: #007700">),&nbsp;array(</span><span style="color: #0000BB">4</span><span style="color: #007700">,</span><span style="color: #0000BB">5</span><span style="color: #007700">,</span><span style="color: #0000BB">6</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">?&gt;<br /></span><br /></span>
</code></div>
<div class='example-returns'><strong>Returns:</strong><br /><br /><pre>
<b>array</b>
  0 <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'a'</font> <i>(length=1)</i>
  1 <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'b'</font> <i>(length=1)</i>
  2 <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'item'</font> <i>(length=4)</i>

</pre></div>
<p>
In PHP versions before 5.1, the variable name "a" is not in the returned array,
 as it is not used in the scope where the function xdebug_get_declared_vars() is
 called in.

</p></div>
<a name='xdebug_get_function_stack'></a>
<hr class='light'/>
<div class='name'><span class='type'>array</span> xdebug_get_function_stack()</div>
<div class='short-description'>Returns information about the stack</div>
<div class='description'>
<p>
Returns an array which resembles the stack trace up to this point. The example script:
 

</p><div class='example'><strong>Example:</strong><br /><br />
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #007700">class&nbsp;</span><span style="color: #0000BB">strings&nbsp;</span><span style="color: #007700">{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #0000BB">fix_string</span><span style="color: #007700">(</span><span style="color: #0000BB">$a</span><span style="color: #007700">)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">var_dump</span><span style="color: #007700">(</span><span style="color: #0000BB">xdebug_get_function_stack</span><span style="color: #007700">());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;</span><span style="color: #0000BB">fix_strings</span><span style="color: #007700">(</span><span style="color: #0000BB">$b</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;(</span><span style="color: #0000BB">$b&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #0000BB">$item</span><span style="color: #007700">)&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$this</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">fix_string</span><span style="color: #007700">(</span><span style="color: #0000BB">$item</span><span style="color: #007700">);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$s&nbsp;</span><span style="color: #007700">=&nbsp;new&nbsp;</span><span style="color: #0000BB">strings</span><span style="color: #007700">();<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">$ret&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">$s</span><span style="color: #007700">-&gt;</span><span style="color: #0000BB">fix_strings</span><span style="color: #007700">(array(</span><span style="color: #DD0000">'Derick'</span><span style="color: #007700">));<br /></span><span style="color: #0000BB">?&gt;<br /></span><br /></span>
</code></div>
<div class='example-returns'><strong>Returns:</strong><br /><br /><pre>
<b>array</b>
  0 <font color='#888a85'>=&gt;</font> 
    <b>array</b>
      'function' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'{main}'</font> <i>(length=6)</i>
      'file' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'/var/www/xdebug_get_function_stack.php'</font> <i>(length=63)</i>
      'line' <font color='#888a85'>=&gt;</font> <small>int</small> <font color='#4e9a06'>0</font>
      'params' <font color='#888a85'>=&gt;</font> 
        <b>array</b>
          <i><font color='#888a85'>empty</font></i>
  1 <font color='#888a85'>=&gt;</font> 
    <b>array</b>
      'function' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'fix_strings'</font> <i>(length=11)</i>
      'class' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'strings'</font> <i>(length=7)</i>
      'file' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'/var/www/xdebug_get_function_stack.php'</font> <i>(length=63)</i>
      'line' <font color='#888a85'>=&gt;</font> <small>int</small> <font color='#4e9a06'>18</font>
      'params' <font color='#888a85'>=&gt;</font> 
        <b>array</b>
          'b' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'array (0 =&gt; &apos;Derick&apos;)'</font> <i>(length=21)</i>
  2 <font color='#888a85'>=&gt;</font> 
    <b>array</b>
      'function' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'fix_string'</font> <i>(length=10)</i>
      'class' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'strings'</font> <i>(length=7)</i>
      'file' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'/var/www/xdebug_get_function_stack.php'</font> <i>(length=63)</i>
      'line' <font color='#888a85'>=&gt;</font> <small>int</small> <font color='#4e9a06'>12</font>
      'params' <font color='#888a85'>=&gt;</font> 
        <b>array</b>
          'a' <font color='#888a85'>=&gt;</font> <small>string</small> <font color='#cc0000'>'&apos;Derick&apos;'</font> <i>(length=8)</i>

</pre></div>
</div>
<a name='xdebug_get_stack_depth'></a>
<hr class='light'/>
<div class='name'><span class='type'>integer</span> xdebug_get_stack_depth()</div>
<div class='short-description'>Returns the current stack depth level</div>
<div class='description'>
<p>
Returns the stack depth level. The main body of a script is level 0 and
 each include and/or function call adds one to the stack depth level.

</p></div>
<a name='xdebug_print_function_stack'></a>
<hr class='light'/>
<div class='name'><span class='type'>none</span> xdebug_print_function_stack( <span class='type'>[ string message [, int options ] ]</span> )</div>
<div class='short-description'>Displays the current function stack.</div>
<div class='description'>
<p>
Displays the current function stack, in a similar way as what Xdebug would
 display in an error situation.
 

</p><p>
The "message" argument allows you to replace
 the message in the header with your own. <i>(Introduced in Xdebug 2.1).</i>
 

</p><div class='example'><strong>Example:</strong><br /><br />
<code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br /></span><span style="color: #007700">function&nbsp;</span><span style="color: #0000BB">foo</span><span style="color: #007700">(&nbsp;</span><span style="color: #0000BB">$far</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$out&nbsp;</span><span style="color: #007700">)<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">xdebug_print_function_stack</span><span style="color: #007700">(&nbsp;</span><span style="color: #DD0000">'Your&nbsp;own&nbsp;message'&nbsp;</span><span style="color: #007700">);<br />}<br /></span><span style="color: #0000BB">foo</span><span style="color: #007700">(&nbsp;</span><span style="color: #0000BB">42</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">3141592654&nbsp;</span><span style="color: #007700">);<br /></span><span style="color: #0000BB">?&gt;<br /></span><br /></span>
</code></div>
<div class='example-returns'><strong>Returns:</strong><br /><br /><pre>
<font size='1'><table class='xdebug-error' dir='ltr' border='1' cellspacing='0' cellpadding='1'>
<tr><th align='left' bgcolor='#f57900' colspan="5"><span style='background-color: #cc0000; color: #fce94f; font-size: x-large;'>( ! )</span> Xdebug: Your own message in /home/httpd/html/test/xdebug/print_function_stack.php on line <i>5</i></th></tr>
<tr><th align='left' bgcolor='#e9b96e' colspan='5'>Call Stack</th></tr>
<tr><th align='center' bgcolor='#eeeeec'>#</th><th align='left' bgcolor='#eeeeec'>Time</th><th align='left' bgcolor='#eeeeec'>Memory</th><th align='left' bgcolor='#eeeeec'>Function</th><th align='left' bgcolor='#eeeeec'>Location</th></tr>
<tr><td bgcolor='#eeeeec' align='center'>1</td><td bgcolor='#eeeeec' align='center'>0.0006</td><td bgcolor='#eeeeec' align='right'>653896</td><td bgcolor='#eeeeec'>{main}(  )</td><td title='/home/httpd/html/test/xdebug/print_function_stack.php' bgcolor='#eeeeec'>../print_function_stack.php<b>:</b>0</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>2</td><td bgcolor='#eeeeec' align='center'>0.0007</td><td bgcolor='#eeeeec' align='right'>654616</td><td bgcolor='#eeeeec'>foo( <span>42</span>, <span>3141592654</span> )</td><td title='/home/httpd/html/test/xdebug/print_function_stack.php' bgcolor='#eeeeec'>../print_function_stack.php<b>:</b>7</td></tr>
<tr><td bgcolor='#eeeeec' align='center'>3</td><td bgcolor='#eeeeec' align='center'>0.0007</td><td bgcolor='#eeeeec' align='right'>654736</td><td bgcolor='#eeeeec'><a href="javascript:if(confirm('http://www.php.net/xdebug_print_function_stack  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://www.php.net/xdebug_print_function_stack'" tppabs="http://www.php.net/xdebug_print_function_stack" target='_new'>xdebug_print_function_stack</a>
( <span>&apos;Your own message&apos;</span> )</td><td title='/home/httpd/html/test/xdebug/print_function_stack.php' bgcolor='#eeeeec'>../print_function_stack.php<b>:</b>5</td></tr>
</table></font>

</pre></div>
<p>
The bitmask "options" allows you to configure a few extra options.
 The following options are currently supported:
 <dl>
 <dt><code>XDEBUG_STACK_NO_DESC</code></dt>
 <dd>If this option is set, then the printed stack trace will not have a
 header. This is useful if you want to print a stack trace from your own error
 handler, as otherwise the printed location is where
 <code>xdebug_print_function_stack()</code> was called from. <i>(Introduced in
 Xdebug 2.3).</i></dd>
 </dl>

</p></div>
</div>
<hr />
</div>
<!-- MAIN FEATURE END -->
			</td>
			<td>&nbsp;</td>
		</tr>
		<tr>
			<td>&nbsp;</td>
			<td colspan="4">
<div class="copy">
This site and all of its contents are
Copyright &copy; 2002-2014 by Derick Rethans.<br />
All rights reserved.
</div>
			</td>
		</tr>
	</table>

</body>
</html>
